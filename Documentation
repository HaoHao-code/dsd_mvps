## Documentation
  - In this file we will document the methods for the Web Application, this methods are in our Class Diagram in Journal/Week4.
    
 

* Authentication  Function Name: Login(email: str, password: str) -> bool -  Description: This method will be used to Log in the manager in the Web application. The login function takes two parameters, email and password, and sends them to the database via APIRest. The function then receives a response from the APIRest, which indicates whether the login parameters are correct or not. If the parameters are correct, the function returns True and change the value of the user IsLoged variable to true, otherwise, it returns False.
  
  public bool Login(string email, string password){
    if(correct parameters) //user will be logged, change IsLoged to true, and send the user to the Main Page
    
    if(wrong parametes) //Send message to user
  }
    
 * Authentication - Logout: Function Name: logout(userId)
Description: This method will be used to Log the User out. The logout function takes the user's ID as a parameter and sends it to the server via APIRest to indicate that the user has logged out.  We will change the IsLoged variable to False and the user will be redirect to the Main Page without being Logged.
Parameters: userId: A string or integer representing the user's ID.
Return Value: None: The function does not return anything.
    
    For this we will need an Id of the user that is Log in.
  
  public void Logout(int id ){ //User Id
  //Change IsLoged variable to False and redirect the User to the Main Page
  //Update the database
  
  }  
  
  
  * Manager Class : Parameters
  class Manager {
  /**
   * Constructor for the Manager class, initializes the manager object with the given attributes.
   * @param {number} Id - The manager's unique identifier.
   * @param {string} Name - The manager's full name.
   * @param {string} Email - The manager's email address.
   * @param {string} Password - The manager's password.
   * @param {boolean} isLoged - Indicates if the manager is logged in or not.
   * @param {Date} BirthDate - The manager's birth date.
   * @param {boolean} State - The manager's state (active, inactive).
   **/
 *  This is a JavaScript class named Manager with the given attributes and methods. The class represents a manager object responsible for managing user accounts. The constructor initializes the object with the provided parameters. The Edit_user and Delete_User methods are used to update and delete user accounts, respectively.
  
  
  *Manager - Edit User  Function Name: EditUser(userId: str, name: str, email: str, password: str, birthdate: date) -> bool

Description: The Edit_User function takes five parameters, userId, name, email, password, and birthdate, and sends them to the database via APIRest to update the user's account. The function then receives a response from the APIRest, which indicates whether the update was successful or not. If the update is successful, the function returns True, otherwise, it returns False.

Parameters:

userId (int): A string representing the user's unique identifier in the database.
name (str): A string representing the user's name.
email (str): A string representing the user's email.
password (str): A string representing the user's password.
birthdate (date): A string representing the user's birthdate.
Return Value:

bool: A boolean value representing whether the update was successful or not.

public bool Edit_User(userId: str, name: str, email: str, password: str, birthdate: date ){ 
  //Send message edit occured sucessefuly
  //Update the database
  
  if(somethingÂ´s wrong) //Send message to User saying that a error occured
  
  }  
